apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: prometheus
spec:
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  releaseName: prometheus
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 61.7.2 #45.23.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  values:
    defaultRules:
      rules:
        kubeSchedulerAlerting: false
        kubeSchedulerRecording: false
        kubeControllerManager: false
        kubeProxy: false
    # additionalPrometheusRulesMap:
    #   custom-rules:
    #     groups:
    #       - name: node_alert
    #         rules:
    #           - expr: 'absent(up{job="node-exporter",instance="10.0.15.236:9100"}) or absent(up{job="node-exporter",instance="10.0.15.221:9100"}) or absent(up{job="node-exporter",instance="10.0.1.56:9100"}) or absent(up{job="node-exporter",instance="10.0.1.57:9100"}) or absent(up{job="node-exporter",instance="10.0.1.58:9100"}) > 0'
    #             alert: NodeDown
    #             for: 1m
    #             labels:
    #               severity: critical
    #             annotations:
    #               summary: Instance is down
    grafana:
      enabled: false
    alertmanager:
      alertmanagerSpec:
        replicas: 2
      config:
        global:
          slack_api_url: "https://talk.improwised.com/hooks/91rz8cc69bgftgrqgwh5dx988e"
        route:
          receiver: "slack"
          routes:
          - receiver: "slack"
            routes:
              - match:
                  receiver: "slack"
                continue: true
              - match:
                  receiver: "robusta"
                continue: true
        receivers:
          - name: "slack"
            slack_configs:
              - channel: "demo-alerting" # channel of prometheus alert
                send_resolved: true
                title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Event Notification'
                text: >-
                  {{ range .Alerts }}
                    *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
                    *Description:* {{ .Annotations.description }}
                    *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:> *Runbook:* <{{ .Annotations.runbook }}|:spiral_note_pad:>
                    *Details:*
                    {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                    {{ end }}
                  {{ end }}                  
          - name: "robusta"
            webhook_configs:
              - url: "http://robusta-helmrelease-runner.robusta.svc.cluster.local/api/alerts"
                send_resolved: true
    prometheus:
      prometheusSpec:
        replicas: 2
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 20Gi
        configMaps: 
          - kube-prometheus-stack-kube-state-metrics-customresourcestate-config
